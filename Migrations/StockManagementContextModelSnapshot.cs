// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MonApi.Shared.Data;

#nullable disable

namespace MonApi.Migrations
{
    [DbContext(typeof(StockManagementContext))]
    partial class StockManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MonApi.API.Addresses.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("address_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address_line");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("city");

                    b.Property<string>("Complement")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("complement");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("zip_code");

                    b.HasKey("AddressId")
                        .HasName("PRIMARY");

                    b.ToTable("address", (string)null);
                });

            modelBuilder.Entity("MonApi.API.CartLines.Models.CartLine", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("CartId")
                        .HasColumnType("int(11)")
                        .HasColumnName("cart_id");

                    b.Property<DateTime?>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<bool>("IsSetAside")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_set_aside");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(11)")
                        .HasColumnName("quantity");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("UpdateTime"));

                    b.HasKey("ProductId", "CartId");

                    b.HasIndex(new[] { "CartId" }, "CartLine_Cart_FK");

                    b.HasIndex(new[] { "ProductId" }, "CartLine_Product_FK");

                    b.ToTable("cart_line", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Carts.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("cart_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CartId"));

                    b.Property<DateTime?>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("UpdateTime"));

                    b.HasKey("CartId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CustomerId" }, "Cart_Customer_FK");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Customers.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<int>("AddressId")
                        .HasColumnType("int(11)")
                        .HasColumnName("address_id");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<int>("PasswordId")
                        .HasColumnType("int(11)")
                        .HasColumnName("password_id");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.Property<string>("ValidationId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("validation_id");

                    b.HasKey("CustomerId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AddressId" }, "Customer_Address_FK");

                    b.HasIndex(new[] { "PasswordId" }, "Customer_Password_FK");

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Discounts.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("discount_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<DateTime?>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("start_date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.Property<int>("Value")
                        .HasColumnType("int(11)")
                        .HasColumnName("value");

                    b.HasKey("DiscountId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "Discount_Product_FK");

                    b.ToTable("discount", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Employees.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("employee_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<int>("PasswordId")
                        .HasColumnType("int(11)")
                        .HasColumnName("password_id");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.Property<int>("RoleId")
                        .HasColumnType("int(11)")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("EmployeeId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PasswordId" }, "Employee_Password_FK");

                    b.HasIndex(new[] { "RoleId" }, "Employee_Role_FK");

                    b.ToTable("employee", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Families.Models.Family", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("family_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FamilyId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("FamilyId")
                        .HasName("PRIMARY");

                    b.ToTable("family", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Images.Models.Image", b =>
                {
                    b.Property<string>("ImageId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("image_id");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("FormatType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("format_type");

                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("ImageId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ProductId" }, "Image_Product_FK");

                    b.ToTable("image", (string)null);
                });

            modelBuilder.Entity("MonApi.API.OrderLines.Models.OrderLine", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(11)")
                        .HasColumnName("quantity");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("float")
                        .HasColumnName("unit_price");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex(new[] { "OrderId" }, "OrderLine_Order_FK");

                    b.HasIndex(new[] { "ProductId" }, "OrderLine_Product_FK");

                    b.ToTable("order_line", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Orders.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int(11)")
                        .HasColumnName("customer_id");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("delivery_date");

                    b.Property<int>("StatusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("status_id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CustomerId" }, "Order_Customer_FK");

                    b.HasIndex(new[] { "StatusId" }, "Order_Status_FK");

                    b.ToTable("order", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Passwords.Models.Password", b =>
                {
                    b.Property<int>("PasswordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("password_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PasswordId"));

                    b.Property<int>("AttemptCount")
                        .HasColumnType("int(11)")
                        .HasColumnName("attempt_count");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password_salt");

                    b.Property<DateTime?>("ResetDate")
                        .HasColumnType("datetime")
                        .HasColumnName("reset_date");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("PasswordId")
                        .HasName("PRIMARY");

                    b.ToTable("password", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Products.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("AutoRestock")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("auto_restock");

                    b.Property<int>("AutoRestockTreshold")
                        .HasColumnType("int(11)")
                        .HasColumnName("auto_restock_treshold");

                    b.Property<float?>("BoxPrice")
                        .HasColumnType("float")
                        .HasColumnName("box_price");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Cuvee")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("cuvee");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<int>("FamilyId")
                        .HasColumnType("int(11)")
                        .HasColumnName("family_id");

                    b.Property<bool>("IsBio")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_bio");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("ProducerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("producer_name");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(11)")
                        .HasColumnName("quantity");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int(11)")
                        .HasColumnName("supplier_id");

                    b.Property<float?>("UnitPrice")
                        .HasColumnType("float")
                        .HasColumnName("unit_price");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.Property<int>("Year")
                        .HasColumnType("int(11)")
                        .HasColumnName("year");

                    b.HasKey("ProductId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FamilyId" }, "Product_Family_FK");

                    b.HasIndex(new[] { "SupplierId" }, "Product_Supplier_FK");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Reviews.Models.Review", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int(11)")
                        .HasColumnName("user_id");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<float>("Rating")
                        .HasColumnType("float")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("UpdateTime"));

                    b.HasKey("ProductId", "UserId");

                    b.HasIndex(new[] { "ProductId" }, "Review_Product_FK");

                    b.HasIndex(new[] { "UserId" }, "Review_User_FK");

                    b.ToTable("review", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Roles.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("role_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("RoleId")
                        .HasName("PRIMARY");

                    b.ToTable("role", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Statuses.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("status_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("StatusId")
                        .HasName("PRIMARY");

                    b.ToTable("status", (string)null);
                });

            modelBuilder.Entity("MonApi.API.SupplierOrderLines.Models.SupplierOrderLine", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int(11)")
                        .HasColumnName("product_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(11)")
                        .HasColumnName("quantity");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("float")
                        .HasColumnName("unit_price");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex(new[] { "OrderId" }, "SupplierOrderLine_Order_FK");

                    b.HasIndex(new[] { "ProductId" }, "SupplierOrderLine_Product_FK");

                    b.ToTable("supplier_order_line", (string)null);
                });

            modelBuilder.Entity("MonApi.API.SupplierOrders.Models.SupplierOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("order_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime")
                        .HasColumnName("delivery_date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("employee_id");

                    b.Property<int>("StatusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("status_id");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("OrderId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "EmployeeId" }, "SupplierOrder_Employee_FK");

                    b.HasIndex(new[] { "StatusId" }, "SupplierOrder_Status_FK");

                    b.ToTable("supplier_order", (string)null);
                });

            modelBuilder.Entity("MonApi.API.Suppliers.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("supplier_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int(11)")
                        .HasColumnName("address_id");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contact");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creation_time")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("datetime")
                        .HasColumnName("deletion_time");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Siret")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("siret");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("update_time")
                        .HasDefaultValueSql("current_timestamp()");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime>("UpdateTime"));

                    b.HasKey("SupplierId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "AddressId" }, "Supplier_Address_FK");

                    b.ToTable("supplier", (string)null);
                });

            modelBuilder.Entity("MonApi.API.CartLines.Models.CartLine", b =>
                {
                    b.HasOne("MonApi.API.Carts.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .IsRequired()
                        .HasConstraintName("CartLine_Cart_FK");

                    b.HasOne("MonApi.API.Products.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("CartLine_Product_FK");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MonApi.API.Carts.Models.Cart", b =>
                {
                    b.HasOne("MonApi.API.Customers.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("Cart_Customer_FK");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MonApi.API.Customers.Models.Customer", b =>
                {
                    b.HasOne("MonApi.API.Addresses.Models.Address", "Address")
                        .WithMany("Customers")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("Customer_Address_FK");

                    b.HasOne("MonApi.API.Passwords.Models.Password", "Password")
                        .WithMany("Customers")
                        .HasForeignKey("PasswordId")
                        .IsRequired()
                        .HasConstraintName("Customer_Password_FK");

                    b.Navigation("Address");

                    b.Navigation("Password");
                });

            modelBuilder.Entity("MonApi.API.Discounts.Models.Discount", b =>
                {
                    b.HasOne("MonApi.API.Products.Models.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("Discount_Product_FK");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MonApi.API.Employees.Models.Employee", b =>
                {
                    b.HasOne("MonApi.API.Passwords.Models.Password", "Password")
                        .WithMany("Employees")
                        .HasForeignKey("PasswordId")
                        .IsRequired()
                        .HasConstraintName("Employee_Password_FK");

                    b.HasOne("MonApi.API.Roles.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("Employee_Role_FK");

                    b.Navigation("Password");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MonApi.API.Images.Models.Image", b =>
                {
                    b.HasOne("MonApi.API.Products.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("Image_Product_FK");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MonApi.API.OrderLines.Models.OrderLine", b =>
                {
                    b.HasOne("MonApi.API.Orders.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("OrderLine_Order_FK");

                    b.HasOne("MonApi.API.Products.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("OrderLine_Product_FK");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MonApi.API.Orders.Models.Order", b =>
                {
                    b.HasOne("MonApi.API.Customers.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("Order_Customer_FK");

                    b.HasOne("MonApi.API.Statuses.Models.Status", "Status")
                        .WithMany("Orders")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("Order_Status_FK");

                    b.Navigation("Customer");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MonApi.API.Products.Models.Product", b =>
                {
                    b.HasOne("MonApi.API.Families.Models.Family", "Family")
                        .WithMany("Products")
                        .HasForeignKey("FamilyId")
                        .IsRequired()
                        .HasConstraintName("Product_Family_FK");

                    b.HasOne("MonApi.API.Suppliers.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("Product_Supplier_FK");

                    b.Navigation("Family");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("MonApi.API.Reviews.Models.Review", b =>
                {
                    b.HasOne("MonApi.API.Products.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("Review_Product_FK");

                    b.HasOne("MonApi.API.Customers.Models.Customer", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("Review_User_FK");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MonApi.API.SupplierOrderLines.Models.SupplierOrderLine", b =>
                {
                    b.HasOne("MonApi.API.SupplierOrders.Models.SupplierOrder", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("SupplierOrderLine_Order_FK");

                    b.HasOne("MonApi.API.Products.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("SupplierOrderLine_Product_FK");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MonApi.API.SupplierOrders.Models.SupplierOrder", b =>
                {
                    b.HasOne("MonApi.API.Employees.Models.Employee", "Employee")
                        .WithMany("SupplierOrders")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("SupplierOrder_Employee_FK");

                    b.HasOne("MonApi.API.Statuses.Models.Status", "Status")
                        .WithMany("SupplierOrders")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("SupplierOrder_Status_FK");

                    b.Navigation("Employee");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("MonApi.API.Suppliers.Models.Supplier", b =>
                {
                    b.HasOne("MonApi.API.Addresses.Models.Address", "Address")
                        .WithMany("Suppliers")
                        .HasForeignKey("AddressId")
                        .IsRequired()
                        .HasConstraintName("Supplier_Address_FK");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("MonApi.API.Addresses.Models.Address", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("MonApi.API.Customers.Models.Customer", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MonApi.API.Employees.Models.Employee", b =>
                {
                    b.Navigation("SupplierOrders");
                });

            modelBuilder.Entity("MonApi.API.Families.Models.Family", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MonApi.API.Passwords.Models.Password", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("MonApi.API.Products.Models.Product", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("MonApi.API.Roles.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("MonApi.API.Statuses.Models.Status", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("SupplierOrders");
                });

            modelBuilder.Entity("MonApi.API.Suppliers.Models.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
